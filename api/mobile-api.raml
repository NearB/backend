#%RAML 1.0
title: GitHub API
version: v1
baseUri: https://m.nearb.com/v1/api
mediaType:  application/json

uses:
  locations: types/locations.raml
  stores: types/stores.raml
  users: types/users.raml
  marketing: types/marketing.raml
  products: types/product.raml
  alerts: types/alerts.raml

/stores:
  get:
    responses:
      200:
        body:
          application/json:
            type: stores.SuccessStores

  /{storeId}:
    get:
      description: Retrieve the given Store
      responses:
        200:
          body:
            application/json:
              type: stores.SuccessStore
    put:
      description: Update Store
      body:
        application/json:
          type: stores.Store
      responses:
        200:
          description: Returns the updated Store
          body:
            application/json:
              type: stores.SuccessStore
    /products:
      get:
        description: List the products for the given Store
        queryParameters:
          tags:
            type: string[]
            description: Set of tags used to filter the products
        responses:
          200:
            body:
              application/json:
                type: products.SuccessProducts
    /ads:
      get:
        description: |
          Retrieves the Ads associated to this Store that can be used to trigger an Engagement flow

        queryParameters:
          tags:
            type: string[]
            description: Set of tags used to filter what ads should be shown to the user
          clientId:
            type: string
            description: The Id of the client to whom the Ad will be targeted to

        responses:
          200:
            body:
              application/json:
                type: marketing.SuccessAds

/users:
  post:
    body:
      application/json:
        type: users.Owner | users.Client
    responses:
      200:
        description: Returns the updated User
        body:
          application/json:
            type: users.Owner | users.Client

  /${userId}:
    get:
      responses:
        200:
          body:
            application/json:
              type: users.SuccessUser
    put:
      body:
        application/json:
          type: users.Owner | users.Client
      responses:
        200:
          description: Returns the updated User
          body:
            application/json:
              type: users.Owner | users.Client

    /alerts:
      get:
        description: Lists all the Alerts a given user has configured
        responses:
          200:
            body:
              application/json:
                type: alerts.SuccessAlerts
      post:
        description: Associates a new Alert to the pool of Alerts that can be triggered for a given user
        body:
          application/json:
            type: alerts.Alert

        responses:
          200:
            body:
              application/json:
                type: alerts.SuccessAlerts

/locations:
  get:
    responses:
      200:
        body:
          application/json:
            type: locations.SuccessLocations
  post:
    body:
      application/json:
        type: locations.TrackingInformation
    responses:
      200:
        body:
          application/json:
            type: locations.SuccessLocation

  /${locationId}:
    get:
      responses:
        200:
          body:
            application/json:
              type: locations.SuccessLocation

    put:
      description: Update Location based on tracking information
      body:
        application/json:
          type: locations.TrackingInformation
      responses:
        200:
          body:
            application/json:
              type: locations.SuccessLocation
