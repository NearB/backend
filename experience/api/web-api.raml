#%RAML 1.0
title: GitHub API
version: v3
baseUri: https://api.github.com
mediaType:  application/json

uses:
  locations: types/locations.raml
  stores: types/stores.raml
  users: types/users.raml
  marketing: types/marketing.raml
  products: types/product.raml

# resourceTypes:
#   collection: !include resourceTypes/collection.raml
#   item: !include resourceTypes/item.raml

/api:
  /stores:
    get:
      responses:
        200:
          body:
            application/json:
              type: stores.SuccessStores

    post:
      body:
        application/json:
          type: stores.Store
      responses:
        200:
          body:
            application/json:
              type: stores.SuccessStore

    /{storeId}:
      get:
        description: Retrieve the given Store
        responses:
          200:
            body:
              application/json:
                type: stores.SuccessStore
      put:
        description: Update Store
        body:
          application/json:
            type: stores.Store
        responses:
          200:
            description: Returns the updated Store
            body:
              application/json:
                type: stores.SuccessStore
      /stock:
        get:
          description: List the stock for the given Store
          responses:
            200:
              body:
                application/json:
                  type: products.SuccessStock

      /campaigns:
        get:
          description: List the campaigns associated to this Store
          responses:
            200:
              body:
                application/json:
                  type: marketing.SuccessCampaigns
      /ads:
        get:
          description: List the Ads associated to this Store
          responses:
            200:
              body:
                application/json:
                  type: marketing.SuccessAds

      /clients:
        get:
          description: List of Clients that are usual in this Store Locations
          responses:
            200:
              body:
                application/json:
                  type: users.SuccessUsers

  /marketing:
    /ads:
      get:
        description: Lists all the available Ads that can be used by the stores
        responses:
          200:
            body:
              application/json:
                type: marketing.SuccessAds
      post:
        body:
          application/json:
            type: marketing.Ad
        responses:
          200:
            body:
              application/json:
                type: marketing.SuccessAd

  /products:
    get:
      description: Lists the products in the Warehouse that can be sell in the Stores
      responses:
        200:
          body:
            application/json:
              type: products.SuccessStock

    post:
      description: Adds a new product that can be available in the Stores
      body:
        application/json:
          type: products.Product
      responses:
        200:
          body:
            application/json:
              type: products.SuccessProduct

    /{$productId}:
      put:
        description: Updates a given product description
        body:
          application/json:
            type: products.Product
        responses:
          200:
            body:
              application/json:
                type: products.SuccessProduct
      delete:
        description: Removes a product from the Warehouse
        responses:
          200:
            body:
              application/json:
                type: products.SuccessStock

  /users:
    get:
      queryParameters:
        preferences: string[]
      responses:
        200:
          body:
            application/json:
              type: users.SuccessUsers
    post:
      body:
        application/json:
          type: users.Owner | users.Client
      responses:
        200:
          description: Returns the updated User
          body:
            application/json:
              type: users.Owner | users.Client

    /${userId}:
      get:
        responses:
          200:
            body:
              application/json:
                type: users.SuccessUser
      put:
        body:
          application/json:
            type: users.Owner | users.Client
        responses:
          200:
            description: Returns the updated User
            body:
              application/json:
                type: users.Owner | users.Client

      /stores:
        get:
          description: List the stores a given user is Owner of, or empty otherwise
          responses:
            200:
              body:
                application/json:
                  type: stores.SuccessStores

  /locations:
    get:
      responses:
        200:
          body:
            application/json:
              type: locations.SuccessLocations

    /${locationId}:
      get:
        responses:
          200:
            body:
              application/json:
                type: locations.SuccessLocation

      delete:
        description: Removes the location identified by <<locationId>>
        responses:
          200:
            description: Returns the remaining locations
            body:
              application/json:
                type: locations.SuccessLocations
